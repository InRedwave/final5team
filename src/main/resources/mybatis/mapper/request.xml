<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.oti.srm.dao.srm.IRequestDao">
	<insert id="insertRequest"
		parameterType="com.oti.srm.dto.Request">
		<selectKey keyProperty="rno" resultType="int" order="BEFORE">
			select
			SEQ_REQUESTS.nextval
			from dual
		</selectKey>
		insert into requests (RNO, REQ_DATE, REQ_TITLE, REQ_CONTENT, CLIENT,
		SNO, REQ_EXPECT_DATE, STATUS_NO)
		values(#{rno}, sysdate, #{reqTitle},
		#{reqContent}, #{client}, #{sno}, #{reqExpectDate}, #{statusNo})
	</insert>

	<select id="getRequestList" resultType="com.oti.srm.dto.Request">
		select RNO, REQ_DATE as
		"reqDate", REQ_TITLE as "reqTitle", REQ_CONTENT as "reqContent",
		CLIENT, SNO, REQ_EXPECT_DATE as "reqExpectDate", STATUS_NO as
		"statusNo"
		from requests
	</select>
	

	<select id="getPresentStep" parameterType="int" resultType="int">
		select NEXT_STATUS
		from (
		select rownum as rnum, NEXT_STATUS,CHANGE_DATE
		from(
		select rownum, NEXT_STATUS,CHANGE_DATE from status_histories
		where rno = #{rno}
		order by CHANGE_DATE desc
		)
		order by rnum
		)
		where rnum=1
	</select>

	<select id="selectRequest" parameterType="String"
		resultType="int">
		select max(rno) as "rno"
		from requests
		where client =
		#{client}
	</select>





	<select id="countRows" parameterType="hashmap" resultType="int">
		select count(*)
		from ( select rownum as rnum, r.RNO, r.REQ_DATE,
		r.REQ_TITLE,
		r.REQ_CONTENT, r.CLIENT, r.SNO, r.REQ_EXPECT_DATE,
		r.STATUS_NO,
		rp.REQ_TYPE, rp.DEVELOPER, rp.TESTER, rp.DISTRIBUTOR,
		rp.PM,
		rp.USER_TESTER
		from requests r left outer join request_process rp
		on
		r.RNO = rp.RNO
		order by
		r.req_date desc
		)
		<where>
			<if test='member.mtype.equals("pm")'>
				<if test='listFilter.sno != 0'>
					and sno = #{listFilter.sno}
				</if>
			</if>
			<if test='member.mtype neq "pm"'>
				and sno = #{member.sno}

				<if test='member.mtype eq "developer"'>
					and developer = #{member.mid}
				</if>
				<if test='member.mtype eq "tester"'>
					and tester = #{member.mid}
				</if>
				<if test='member.mtype eq "usertester"'>
					and user_tester = #{member.mid}
				</if>
				<if test='member.mtype eq "distributor"'>
					and distributor = #{member.mid}
				</if>
			</if>

			<if test='listFilter.reqType neq "전체"'>
				and REQ_TYPE = #{listFilter.reqType}
			</if>

			<if test='listFilter.dateValue.equals("zero")'> 
				<![CDATA[
					
				]]>
			</if>
			<if test='listFilter.dateValue.equals("first")'>
				<![CDATA[
					and REQ_DATE <= to_date(#{listFilter.dateLast}, 'yyyy-MM-dd') + 1
				]]>
			</if>
			<if test='listFilter.dateValue.equals("last")'>
				<![CDATA[
					and to_date(#{listFilter.dateFirst}, 'yyyy-MM-dd') <= REQ_DATE 
				]]>
			</if>
			<if test='listFilter.dateValue.equals("both")'>
				<![CDATA[
					and REQ_DATE between to_date(#{listFilter.dateFirst}, 'yyyy-MM-dd') and to_date(#{listFilter.dateLast}, 'yyyy-MM-dd')+1
				]]>
			</if>
			<if test='listFilter.statusNo != 0 '>
				<if test='listFilter.statusValue eq"접수"'>
				<![CDATA[
					and status_no in (1)
				]]>
				</if>
				<if test='listFilter.statusValue eq"개발"'>
				<![CDATA[
					and status_no in (2, 3, 4)
				]]>
				</if>
				<if test='listFilter.statusValue eq"테스트"'>
				<![CDATA[
					and status_no in (5, 6, 7)
				]]>
				</if>
				<if test='listFilter.statusValue eq"유저테스트"'>
				<![CDATA[
					and status_no in (8)
				]]>
				</if>
				<if test='listFilter.statusValue eq"배포"'>
				<![CDATA[
					and status_no in (10)
				]]>
				</if>
				<if test='listFilter.statusValue eq"완료"'>
				<![CDATA[
					and status_no in (11, 13)
				]]>
				</if>
				<if test='listFilter.statusValue eq"반려"'>
				<![CDATA[
					and status_no in (12)
				]]>
				</if>
			</if>
		</where>
	</select>

	<select id="selectMyWorkList" parameterType="hashmap"
		resultType="com.oti.srm.dto.SelectPM">
		<![CDATA[
		select j.RNO, j.REQ_DATE as "reqDate" , j.REQ_TITLE as "reqTitle", j.REQ_CONTENT as "reqContent", 
		 		j.CLIENT, j.SNO, j.REQ_EXPECT_DATE as "reqExpectDate", j.STATUS_NO as "statusNo",
		                j.REQ_TYPE as "reqType", j.DEVELOPER, j.TESTER, j.DISTRIBUTOR, j.PM, j.USER_TESTER as "userTester"
		            from (
		            select r.RNO, r.REQ_DATE, r.REQ_TITLE, r.REQ_CONTENT, r.CLIENT, r.SNO, r.REQ_EXPECT_DATE, r.STATUS_NO,
		                    rp.REQ_TYPE, rp.DEVELOPER, rp.TESTER, rp.DISTRIBUTOR, rp.PM, rp.USER_TESTER
		            from requests r left outer join request_process rp
		            on r.RNO = rp.RNO
		            
		    ]]>
		<where>
			<if test='member.mtype.equals("pm")'>
				<if test='listFilter.sno != 0'>
					and sno = #{listFilter.sno}
				</if>
			</if>
			<if test='member.mtype neq "pm"'>
				and sno = #{member.sno}

				<if test='member.mtype eq "developer"'>
					and developer = #{member.mid}
				</if>
				<if test='member.mtype eq "tester"'>
					and tester = #{member.mid}
				</if>
				<if test='member.mtype eq "usertester"'>
					and user_tester = #{member.mid}
				</if>
				<if test='member.mtype eq "distributor"'>
					and distributor = #{member.mid}
				</if>
			</if>

			<if test='listFilter.reqType neq "전체"'>
				and REQ_TYPE = #{listFilter.reqType}
			</if>

			<if test='listFilter.dateValue.equals("zero")'>

			</if>
			<if test='listFilter.dateValue.equals("first")'>
				<![CDATA[
					and REQ_DATE <= to_date(#{listFilter.dateLast}, 'yyyy-MM-dd') +  1
				]]>
			</if>
			<if test='listFilter.dateValue.equals("last")'>
				<![CDATA[
					and to_date(#{listFilter.dateFirst}, 'yyyy-MM-dd') <= REQ_DATE 
				]]>
			</if>
			<if test='listFilter.dateValue.equals("both")'>
				<![CDATA[
					and REQ_DATE between to_date(#{listFilter.dateFirst}, 'yyyy-MM-dd') and to_date(#{listFilter.dateLast}, 'yyyy-MM-dd')
				]]>
			</if>
			<if test='listFilter.statusNo != 0'>
				<if test='listFilter.statusValue eq"접수"'>
				<![CDATA[
					and status_no in (1)
				]]>
				</if>
				<if test='listFilter.statusValue eq"개발"'>
				<![CDATA[
					and status_no in (2, 3, 4)
				]]>
				</if>
				<if test='listFilter.statusValue eq"테스트"'>
				<![CDATA[
					and status_no in (5, 6, 7)
				]]>
				</if>
				<if test='listFilter.statusValue eq"유저테스트"'>
				<![CDATA[
					and status_no in (8)
				]]>
				</if>
				<if test='listFilter.statusValue eq"배포"'>
				<![CDATA[
					and status_no in (10)
				]]>
				</if>
				<if test='listFilter.statusValue eq"완료"'>
				<![CDATA[
					and status_no in (11, 13)
				]]>
				</if>
				<if test='listFilter.statusValue eq"반려"'>
				<![CDATA[
					and status_no in (12)
				]]>
				</if>
			</if>
		</where>
		order by r.req_date desc
		) j offset (#{pager.startRowNo}-1) rows fetch
		next #{pager.endRowNo} rows only
	</select>

	<select id="countRequestRows" parameterType="hashmap"
		resultType="int">
		select count(*)
		from requests
		<where>
			client = #{member.mid}

			<if test='listFilter.reqType neq "전체"'>
				and REQ_TYPE = #{listFilter.reqType}
			</if>

			<if test='listFilter.dateValue.equals("zero")'> 
				<![CDATA[
					
				]]>
			</if>
			<if test='listFilter.dateValue.equals("first")'>
				<![CDATA[
					and REQ_DATE <= to_date(#{listFilter.dateLast}, 'yyyy-MM-dd') + 1
				]]>
			</if>
			<if test='listFilter.dateValue.equals("last")'>
				<![CDATA[
					and to_date(#{listFilter.dateFirst}, 'yyyy-MM-dd') <= REQ_DATE 
				]]>
			</if>
			<if test='listFilter.dateValue.equals("both")'>
				<![CDATA[
					and REQ_DATE between to_date(#{listFilter.dateFirst}, 'yyyy-MM-dd') and to_date(#{listFilter.dateLast}, 'yyyy-MM-dd')
				]]>
			</if>
			<if test='listFilter.statusNo != 0 '>
				<if test='listFilter.statusValue eq"접수"'>
				<![CDATA[
					and status_no in (1)
				]]>
				</if>
				<if test='listFilter.statusValue eq"개발"'>
				<![CDATA[
					and status_no in (2, 3, 4)
				]]>
				</if>
				<if test='listFilter.statusValue eq"테스트"'>
				<![CDATA[
					and status_no in (5, 6, 7)
				]]>
				</if>
				<if test='listFilter.statusValue eq"유저테스트"'>
				<![CDATA[
					and status_no in (8)
				]]>
				</if>
				<if test='listFilter.statusValue eq"배포"'>
				<![CDATA[
					and status_no in (10)
				]]>
				</if>
				<if test='listFilter.statusValue eq"완료"'>
				<![CDATA[
					and status_no in (11, 13)
				]]>
				</if>
				<if test='listFilter.statusValue eq"반려"'>
				<![CDATA[
					and status_no in (12)
				]]>
				</if>
			</if>
			order by req_date desc
			
		</where>
	</select>
	<select id="selectMyRequest" parameterType="hashmap"
		resultType="com.oti.srm.dto.SelectPM">
		<![CDATA[
			select RNO, REQ_DATE as "reqDate", REQ_TITLE as "reqTitle", REQ_CONTENT as "reqContent"
					, CLIENT, SNO, REQ_EXPECT_DATE as "reqExpectDate" , STATUS_NO as "statusNo"
			from(
			    select RNO, REQ_DATE, REQ_TITLE, REQ_CONTENT,
			    CLIENT, SNO, REQ_EXPECT_DATE  , STATUS_NO 
			    from requests
		]]>
			
			
		<where>
			client = #{member.mid}
			<if test='listFilter.reqType neq "전체"'>
				and REQ_TYPE = #{listFilter.reqType}
			</if>
			<if test='listFilter.dateValue.equals("zero")'>
			</if>
			<if test='listFilter.dateValue.equals("first")'>
				<![CDATA[
					and REQ_DATE <= to_date(#{listFilter.dateLast}, 'yyyy-MM-dd') + 1
				]]>
			</if>
			<if test='listFilter.dateValue.equals("last")'>
				<![CDATA[
					and to_date(#{listFilter.dateFirst}, 'yyyy-MM-dd') <= REQ_DATE 
				]]>
			</if>
			<if test='listFilter.dateValue.equals("both")'>
				<![CDATA[
					and REQ_DATE between to_date(#{listFilter.dateFirst}, 'yyyy-MM-dd') and to_date(#{listFilter.dateLast}, 'yyyy-MM-dd')
				]]>
			</if>
			<if test='listFilter.statusNo != 0'>
				<if test='listFilter.statusValue eq"접수"'>
				<![CDATA[
					and status_no in (1)
				]]>
				</if>
				<if test='listFilter.statusValue eq"개발"'>
				<![CDATA[
					and status_no in (2, 3, 4)
				]]>
				</if>
				<if test='listFilter.statusValue eq"테스트"'>
				<![CDATA[
					and status_no in (5, 6, 7)
				]]>
				</if>
				<if test='listFilter.statusValue eq"유저테스트"'>
				<![CDATA[
					and status_no in (8)
				]]>
				</if>
				<if test='listFilter.statusValue eq"배포"'>
				<![CDATA[
					and status_no in (10)
				]]>
				</if>
				<if test='listFilter.statusValue eq"완료"'>
				<![CDATA[
					and status_no in (11, 13)
				]]>
				</if>
				<if test='listFilter.statusValue eq"반려"'>
				<![CDATA[
					and status_no in (12)
				]]>
				</if>
			</if>
			
		</where>
		order by req_date desc
		) offset (#{pager.startRowNo}-1) rows fetch
		next #{pager.endRowNo} rows only
	</select>


	<select id="selectRequestDetail" parameterType="int" resultType="com.oti.srm.dto.Request">
		select r.RNO, r.REQ_DATE as "reqDate" , r.REQ_TITLE as "reqTitle" , r.REQ_CONTENT as "reqContent", 
				r.CLIENT, r.SNO, r.REQ_EXPECT_DATE as "reqExpectDate", r.STATUS_NO, sh.hno
        from status_histories sh left outer join requests r
        on sh.rno = r.rno
        where r.rno=#{rno} and next_status = 1
	</select>
	
	<select id="setRequestFiles" parameterType="int" resultType="com.oti.srm.dto.StatusHistoryFile">
		select FNO, SAVED_DATE as "savedDate", FILE_NAME as "fileName", FILE_TYPE as "fileType", FILE_DATA as "fileData", HNO
		from STATUS_HISTORIES_FILES
		where hno = #{hno}
	</select>
	
	<select id="selectRequestFile" parameterType="int" resultType="com.oti.srm.dto.StatusHistoryFile">
		select FNO, SAVED_DATE as "savedDate", FILE_NAME as "fileName", FILE_TYPE as "fileType", FILE_DATA as "fileData"
			from STATUS_HISTORIES_FILES
			where hno = #{hno}
	</select>
	





</mapper>