<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.oti.srm.dao.srm.ICommonDao">
	<select id="selectRequestHistories" parameterType="int" resultType="com.oti.srm.dto.StatusHistory">
		select
	    	hno as "hno",
	        change_date as "changeDate",
	        sh.rno as "rno",
	        next_status as "nextStatus",
	        status_name as "statusName",
	        reply as "reply",
	        dist_source as "distSource",
	        writer as "writer"
		from status_histories sh, status s
		where sh.next_status = s.status_no 
		and sh.rno = #{rno}
		order by change_date asc
	</select>
	
	<select id="selectStatusHistoryFiles" parameterType="int" resultType="com.oti.srm.dto.StatusHistoryFile">
		select
	    	fno as "fno",
	    	saved_date as "savedDate",
	    	file_name as "fileName",
	    	file_type as "fileType",
	    	file_data as "fileData",
	    	hno as "hno"
		from status_histories_files
		where hno = #{hno}
	</select>
	
	<select id="selectRequest" parameterType="int" resultType="com.oti.srm.dto.Request">
		select
	    	rno as "rno",
	    	req_date as "reqDate",
	    	req_title as "reqTitle",
	    	req_content as "reqContent",
	    	client as "client",
	    	mname as "clientName",
	    	r.sno as "sno",
	    	system_name as "systemName",
	    	req_expect_date as "reqExpectDate",
	    	r.status_no as "statusNo",
	    	status_name as "statusName",
	    	m.organ as "organ",
	    	PM_CHECK as "pmCheck",
	    	DEV_CHECK as "devCheck",
	    	TES_CHECK as "tesCheck",
	    	UTT_CHECK as "uttCheck",
	    	DIS_CHECK as "disCheck",
	    	USR_CHECK as "usrCheck"
		from requests r, status s, systems sy, members m
		where s.status_no = r.status_no 
		and r.sno = sy.sno
		and r.client = m.mid
		and rno = #{rno}
	</select>
	
	<select id="selectRequestProcess" parameterType="int" resultType="com.oti.srm.dto.RequestProcess">
		select
	    	rno as "rno",
	    	req_type as "reqType",
	    	priority as "priority",
	    	dev_expect_date as "devExpectDate",
	    	test_expect_date as "testExpectDate",
	    	dist_expect_date as "distExpectDate",
	    	all_expect_date as "allExpectDate",
	    	usertest_expect_date as "userTestExpectDate",
	    	dev_comp_date as "devCompDate",
	    	test_comp_date as "testCompDate",
	    	dist_comp_date as "distCompDate",
	    	all_comp_date as "allCompDate",
	    	usertest_comp_date as "userTestCompDate",
	    	pm as "pm",
	    	developer as "developer",
	    	tester as "tester",
	    	distributor as "distributor",
	    	user_tester as "userTester",
	    	dev_progress as "devProgress"
		from request_process
		where rno = #{rno}
	</select>
	
	<select id="selectRequestFiles" parameterType="int" resultType="com.oti.srm.dto.StatusHistoryFile">
		select 
			fno as "fno",
			saved_date as "savedDate",
			file_name as "fileName",
			file_type as "fileType",
			file_data as "fileData",
			sh.hno as "hno"
		from status_histories sh, status_histories_files shf 
		where sh.hno = shf.hno
		and sh.rno = #{rno}
		and sh.next_status = 1
	</select>
	
	<update id="updateExpectDate" parameterType="map">
		update request_process 
		<set>
			<if test="mtype == 'pm'">
				all_expect_date = #{expectDate},
			</if>
			<if test="mtype == 'developer'">
				dev_expect_date = #{expectDate},
			</if>
			<if test="mtype == 'tester'">
				test_expect_date = #{expectDate},
			</if>
			<if test="mtype == 'usertester'">
				usertest_expect_date = #{expectDate},
			</if>
			<if test="mtype == 'distributor'">
				dist_expect_date = #{expectDate}
			</if>
		</set> 
		where rno = #{rno} 
	</update>
	
	<update id="updateCompDate" parameterType="map">
		update request_process 
		<set>
			<if test="mtype == 'pm'">
				all_comp_date = sysdate,
			</if>
			<if test="mtype == 'developer'">
				dev_comp_date = sysdate,
			</if>
			<if test="mtype == 'tester'">
				test_comp_date = sysdate,
			</if>
			<if test="mtype == 'usertester'">
				usertest_comp_date = sysdate,
			</if>
			<if test="mtype == 'distributor'">
				dist_comp_date = sysdate
			</if>
		</set> 
		where rno = #{rno} 
	</update>
	
	<update id="updateResetDate" parameterType="int">
		update request_process 
			set dev_comp_date = null,
				dev_expect_date = null,
				test_expect_date = null
		where rno = #{rno} 
	</update>
	
	<insert id="insertStatusHistory" parameterType="com.oti.srm.dto.StatusHistory">
		<selectKey keyProperty="hno" resultType="int" order="BEFORE">
          SELECT seq_status_histories.nextval FROM dual
       </selectKey>		
		insert into status_histories
		(hno, change_date, rno, reply, next_status, dist_source, writer)
		values 
		(#{hno}, sysdate, #{rno}, #{reply}, #{nextStatus}, #{distSource}, #{writer})
	</insert>
	
	<update id="updateRequestStatus" parameterType="map">
		update requests
		set
			status_no = #{statusNo}
		where rno = #{rno}
	</update>
	
	<insert id="insertStatusHistoryFile" parameterType="com.oti.srm.dto.StatusHistoryFile">
		insert into status_histories_files
		values
		(seq_status_histories_files.nextval, sysdate, #{fileName}, #{fileType}, #{fileData}, #{hno})
	</insert>
	
	<select id="selectMyWorkStatus" parameterType="com.oti.srm.dto.Member" resultType="com.oti.srm.dto.Status">
			SELECT 
				r.status_no as "statusNo",
			    count(*) as "count"
			FROM request_process rp, requests r, status s  
			<where> 
				rp.rno(+) = r.rno
				and r.status_no = s.status_no
				<if test="mtype == 'developer'">
					and developer=#{mid}
				</if>
				<if test="mtype == 'usertester'">
					and user_tester=#{mid}
				</if>
				<if test="mtype == 'tester'">
					and tester=#{mid}
				</if>
				<if test="mtype == 'distributor'">
					and distributor=#{mid}
				</if>
			</where>
			group by r.status_no
	</select>
	
	<select id="selectMyRequestStatus" parameterType="com.oti.srm.dto.Member" resultType="com.oti.srm.dto.Status">
			SELECT 
				r.status_no as "statusNo",
			    count(*) as "count"
			FROM requests r, status s  
			WHERE
				r.status_no = s.status_no
				and r.client = #{mid}
			group by r.status_no
	</select>
	
	<select id="selectListOf7daysLeftCount" parameterType="com.oti.srm.dto.Member" resultType="int">
		select count(*)
		from requests r, request_process rp, status s, systems sy
		where r.rno = rp.rno 
		and r.status_no = s.status_no
		and r.sno = sy.sno
		and all_expect_date <![CDATA[<=]]> sysdate + 7
		and all_comp_date is null
	</select>
	
	<select id="selectListOf7daysLeft" parameterType="map" resultType="com.oti.srm.dto.Request">
		select
			r.rno as "rno",
			r.sno as "sno",
			system_name as "systemName",
			req_type as "reqType",
			priority as "priority",
			req_date as "reqDate",
			req_title as "reqTitle",
			status_name as "statusName",
			all_expect_date as "allExpectDate"			
		from requests r, request_process rp, status s, systems sy
		where r.rno = rp.rno 
		and r.status_no = s.status_no
		and r.sno = sy.sno
		and all_expect_date <![CDATA[<=]]> sysdate + 7
		and all_comp_date is null
		order by all_expect_date
		OFFSET (#{dPager.pageNo} - 1) * #{dPager.rowsPerPage} ROWS
		FETCH NEXT #{dPager.rowsPerPage} ROWS ONLY	
	</select>
	
	<select id="selectAllMyRequests" parameterType="com.oti.srm.dto.Member" resultType="int">
		select count(*) 
		from request_process
		<where>			
			<if test="mtype == 'pm'">
			 and ALL_EXPECT_DATE is not null
			 and ALL_COMP_DATE is not null
			</if>
			<if test="mtype == 'developer'">
			 DEVELOPER = #{mid}
			and DEV_EXPECT_DATE is not null
			and DEV_COMP_DATE is not null
			</if>
			<if test="mtype == 'tester'">
			 TESTER = #{mid}
			 and TEST_EXPECT_DATE is not null
			 and TEST_COMP_DATE is not null
			</if>
			<if test="mtype == 'usertester'">
		   	 USER_TESTER = #{mid}
		   	 and USERTEST_EXPECT_DATE is not null
		   	 and USERTEST_COMP_DATE is not null
			</if>
			<if test="mtype == 'distributor'">
			 DISTRIBUTOR = #{mid}
			 and DIST_EXPECT_DATE is not null
			 and DIST_COMP_DATE is not null
			</if>
		</where>
	</select>
	<select id="selectDelayRequests" parameterType="com.oti.srm.dto.Member" resultType="int">
		select count(*) 
		from request_process
		<where>			
			<if test="mtype == 'pm'">
			 and ALL_EXPECT_DATE is not null
			 and ALL_COMP_DATE is not null
			 and ALL_EXPECT_DATE <![CDATA[<]]> ALL_COMP_DATE
			</if>
			<if test="mtype == 'developer'">
			 DEVELOPER = #{mid}
			and DEV_EXPECT_DATE is not null
			and DEV_COMP_DATE is not null
			and DEV_EXPECT_DATE <![CDATA[<]]> DEV_COMP_DATE
			</if>
			<if test="mtype == 'tester'">
			 TESTER = #{mid}
			 and TEST_EXPECT_DATE is not null
			 and TEST_COMP_DATE is not null
			 and TEST_EXPECT_DATE <![CDATA[<]]> TEST_COMP_DATE
			</if>
			<if test="mtype == 'usertester'">
		   	 USER_TESTER = #{mid}
		   	 and USERTEST_EXPECT_DATE is not null
		   	 and USERTEST_COMP_DATE is not null
		   	 and USERTEST_EXPECT_DATE <![CDATA[<]]> USERTEST_COMP_DATE
			</if>
			<if test="mtype == 'distributor'">
			 DISTRIBUTOR = #{mid}
			 and DIST_EXPECT_DATE is not null
			 and DIST_COMP_DATE is not null
			 and DIST_EXPECT_DATE <![CDATA[<]]> DIST_COMP_DATE
			</if>
		</where>
	</select>
	<select id="selectFile" parameterType="int" resultType="com.oti.srm.dto.StatusHistoryFile">
		<![CDATA[
			select fno,
			file_name as "fileName",
			file_data as "fileData", 
			file_type as "fileType"
			from STATUS_HISTORIES_FILES
			where FNO = #{fno}
		
		]]>
	</select>
	<select id="selectRequestProcessList" parameterType="map" resultType="com.oti.srm.dto.RequestProcess">
		select 
			r.req_title as "reqTitle", 
			rp.req_type as "reqType", 
			rp.priority as "priority", 
			r.req_date as "reqDate",
		 	rp.all_expect_date as "allExpectDate",
		 	m.mname as "mname", 
		 	st.status_name as "statusName", 
		 	r.rno as "rno",
		 	DEV_CHECK as "devCheck",
		 	TES_CHECK as "tesCheck",
		 	UTT_CHECK as "uttCheck",
		 	DIS_CHECK as "disCheck"
		 <if test="member.mtype == 'developer'">, rp.developer as "developer"</if>
		 <if test="member.mtype == 'usertester'">, rp.user_tester as "userTester"</if>
		 <if test="member.mtype == 'tester'">, rp.tester as "tester"</if>
		 <if test="member.mtype == 'distributor'">, rp.distributor as "distributor"</if>
		from requests r, request_process rp, systems s, members m, status st 
		<where> 
			r.rno = rp.rno
			and r.sno = s.sno
			 <if test="member.mtype == 'developer'"> and rp.developer = m.mid</if>
			 <if test="member.mtype == 'usertester'">and rp.user_tester  = m.mid</if>
			 <if test="member.mtype == 'tester'">and rp.tester = m.mid</if>
			 <if test="member.mtype == 'distributor'">and rp.distributor  = m.mid</if>
			and r.status_no = st.status_no
			and r.sno = #{member.sno}
			<if test='checkbox =="y"'>
				<if test="member.mtype == 'developer'"> and rp.developer = #{member.mid}</if>
				 <if test="member.mtype == 'usertester'">and rp.user_tester  = #{member.mid}</if>
				 <if test="member.mtype == 'tester'">and rp.tester = #{member.mid}</if>
				 <if test="member.mtype == 'distributor'">and rp.distributor  = #{member.mid}</if>
			</if>
			<if test="status == '대기'">
				<if test="member.mtype == 'developer'"> and r.status_no <![CDATA[=]]> 2</if>
				<if test="member.mtype == 'tester'">and r.status_no <![CDATA[<=]]> 5</if>
				<if test="member.mtype == 'usertester'">and r.status_no <![CDATA[<=]]> 7</if>
				<if test="member.mtype == 'distributor'">and r.status_no <![CDATA[<=]]> 9</if>
			</if>
			<if test="status == '진행중'">
				<if test="member.mtype == 'developer'"> and r.status_no <![CDATA[=]]> 4</if>
				<if test="member.mtype == 'tester'">and r.status_no <![CDATA[=]]> 6</if>
				<if test="member.mtype == 'usertester'">and r.status_no <![CDATA[=]]> 8</if>
				<if test="member.mtype == 'distributor'">and r.status_no <![CDATA[=]]> 10</if>
			</if>
			<if test="status == '완료'">
				<if test="member.mtype == 'developer'"> and r.status_no <![CDATA[>=]]> 5 </if>
				<if test="member.mtype == 'tester'">and r.status_no <![CDATA[>=]]> 7</if>
				<if test="member.mtype == 'usertester'">and r.status_no <![CDATA[>=]]> 9</if>
				<if test="member.mtype == 'distributor'">and r.status_no <![CDATA[>=]]> 11</if>
			</if>
			<if test="status == '재검토'"> and r.status_no <![CDATA[=]]> 3</if>
		</where>
		order by r.req_date 
		OFFSET (#{pager.pageNo} - 1) * #{pager.rowsPerPage} ROWS
		FETCH NEXT #{pager.rowsPerPage} ROWS ONLY
	</select>
	
	<select id="selectRequestProcessRows" parameterType="map" resultType="int">
		select count(*)
		from requests r, request_process rp, systems s, members m, status st 
		<where> 
			r.rno = rp.rno
			and r.sno = s.sno
			 <if test="member.mtype == 'developer'"> and rp.developer = m.mid</if>
			 <if test="member.mtype == 'usertester'">and rp.user_tester  = m.mid</if>
			 <if test="member.mtype == 'tester'">and rp.tester = m.mid</if>
			 <if test="member.mtype == 'distributor'">and rp.distributor  = m.mid</if>
			and r.status_no = st.status_no
			and r.sno = #{member.sno}
			<if test='checkbox =="y"'>
				<if test="member.mtype == 'developer'"> and rp.developer = #{member.mid}</if>
				 <if test="member.mtype == 'usertester'">and rp.user_tester  = #{member.mid}</if>
				 <if test="member.mtype == 'tester'">and rp.tester = #{member.mid}</if>
				 <if test="member.mtype == 'distributor'">and rp.distributor  = #{member.mid}</if>
			</if>
			<if test="status == '대기'">
				<if test="member.mtype == 'developer'"> and r.status_no <![CDATA[=]]> 2</if>
				<if test="member.mtype == 'tester'">and r.status_no <![CDATA[<=]]> 5</if>
				<if test="member.mtype == 'usertester'">and r.status_no <![CDATA[<=]]> 7</if>
				<if test="member.mtype == 'distributor'">and r.status_no <![CDATA[<=]]> 9</if>
			</if>
			<if test="status == '진행중'">
				<if test="member.mtype == 'developer'"> and r.status_no <![CDATA[=]]> 4</if>
				<if test="member.mtype == 'tester'">and r.status_no <![CDATA[=]]> 6</if>
				<if test="member.mtype == 'usertester'">and r.status_no <![CDATA[=]]> 8</if>
				<if test="member.mtype == 'distributor'">and r.status_no <![CDATA[=]]> 10</if>
			</if>
			<if test="status == '완료'">
				<if test="member.mtype == 'developer'"> and r.status_no <![CDATA[>=]]> 5 </if>
				<if test="member.mtype == 'tester'">and r.status_no <![CDATA[>=]]> 7</if>
				<if test="member.mtype == 'usertester'">and r.status_no <![CDATA[>=]]> 9</if>
				<if test="member.mtype == 'distributor'">and r.status_no <![CDATA[>=]]> 11</if>
			</if>
			<if test="status == '재검토'"> and r.status_no <![CDATA[=]]> 3</if>
		</where>
	</select>
	
	<select id="selectUserRequestListCount" parameterType="map" resultType="int">
		select count(*)
		from requests r, systems s
		<where>
			r.sno = s.sno
			and r.client = #{member.mid}
			<if test="searchStatus == '진행중'">
				and status_no between 1 and 11
			</if>
			<if test="searchStatus == '완료'">
				and status_no = 13
			</if>
			<if test="searchStatus == '반려'">
				and status_no = 12
			</if>
		</where>
		order by r.req_date desc
	</select>
	
	<select id="selectUserRequestList" parameterType="map" resultType="com.oti.srm.dto.Request">
		select 
			r.rno as "rno",
			req_title as "reqTitle",
			system_name as "systemName",
			req_date as "reqDate",
			status_no as "statusNo",	
			USR_CHECK as "usrCheck"
		from requests r, systems s
		<where>
			r.sno = s.sno
			and r.client = #{member.mid}
			<if test="searchStatus == '진행중'">
				and status_no between 1 and 11
			</if>
			<if test="searchStatus == '완료'">
				and status_no = 13
			</if>
			<if test="searchStatus == '반려'">
				and status_no = 12
			</if>
		</where>
		order by r.req_date desc
		OFFSET (#{uPager.pageNo} - 1) * #{uPager.rowsPerPage} ROWS
		FETCH NEXT #{uPager.rowsPerPage} ROWS ONLY
	</select>
	
	<select id="selectTempStatusHistory" parameterType="map" resultType="com.oti.srm.dto.StatusHistory">
		select 
			hno as "hno",
	        change_date as "changeDate",
	        rno as "rno",
	        next_status as "nextStatus",
	        reply as "reply",
	        dist_source as "distSource",
	        writer as "writer"
		from status_histories
		where rno = #{statusHistory.rno}
		and next_status = #{statusHistory.nextStatus}
		and writer = #{member.mid}
	</select>
	
	<update id="updateStatusHistory" parameterType="com.oti.srm.dto.StatusHistory">
		update status_histories 
		set 
			reply = #{reply},
			dist_source = #{distSource},
			change_date = sysdate
		where rno = #{rno}
		and next_status = #{nextStatus}
		and writer = #{writer}
	</update>
	
	<update id="updateDevProgress" parameterType="com.oti.srm.dto.RequestProcess">
		update request_process
		set
			dev_progress = #{devProgress}
		where rno = #{rno}	
	</update>
	
	<update id="updateRequestProcess" parameterType="com.oti.srm.dto.RequestProcess">
		update request_process
		set
			req_type = #{reqType},
			priority = #{priority},
			all_expect_date = #{allExpectDate},
			developer = #{developer},
			tester = #{tester},
			user_tester = #{userTester},
			distributor = #{distributor}
		where rno = #{rno}	
	</update>
	
	<update id="updateRealStatusHistory" parameterType="com.oti.srm.dto.StatusHistory">
		update status_histories
		set
			reply = #{reply},
			dist_source = #{distSource},
			change_date = sysdate
		where hno = #{hno}
	</update>
	
	<select id="selectPmRequestProcessList" parameterType="map" resultType="com.oti.srm.dto.RequestProcess">
		select 
			r.req_title as "reqTitle", 
			rp.req_type as "reqType", 
			rp.priority as "priority", 
			r.req_date as "reqDate",
		 	rp.all_expect_date as "allExpectDate",
		 	system_name as "systemName",
		 	st.status_name as "statusName", 
		 	r.pm_check as "pmCheck",
		 	r.rno as "rno"
		from requests r, request_process rp, systems s, status st 
		<where> 
			r.rno = rp.rno(+)
			and r.sno = s.sno
			and r.status_no = st.status_no
			<if test="status == '접수대기'">
				and r.status_no = 1
			</if>
			<if test="status == '승인대기'">
				and r.status_no = 11
			</if>
			<if test="status == '진행중'">
				and r.status_no in (2, 3, 4, 5, 6, 7, 8, 9, 10)
			</if>
			<if test="status == '완료및반려'"> 
			 	and r.status_no in (12, 13)
			 </if>
		</where>
		order by r.req_date 
		OFFSET (#{pager.pageNo} - 1) * #{pager.rowsPerPage} ROWS
		FETCH NEXT #{pager.rowsPerPage} ROWS ONLY
	</select>
	
	<select id="selectPmRequestProcessRows" parameterType="map" resultType="int">
		select count(*)
		from requests r, request_process rp, systems s, status st 
		<where> 
			r.rno = rp.rno(+)
			and r.sno = s.sno
			and r.status_no = st.status_no
			<if test="status == '접수대기'">
				and r.status_no = 1
			</if>
			<if test="status == '승인대기'">
				and r.status_no = 11
			</if>
			<if test="status == '진행중'">
				and r.status_no in (2, 3, 4, 5, 6, 7, 8, 9, 10)
			</if>
			<if test="status == '완료및반려'"> 
			 	and r.status_no in (12, 13)
			 </if>
		</where>
	</select>
	
	<update id="updateCheck" parameterType="map">
		update REQUESTS
		<set>
			<if test="mtype == 'user'">USR_CHECK=0</if>
			<if test="mtype == 'pm'">PM_CHECK=0</if>
			<if test="mtype == 'developer'">DEV_CHECK=0</if>
			<if test="mtype == 'tester'">TES_CHECK=0</if>
			<if test="mtype == 'usertester'">UTT_CHECK=0</if>
			<if test="mtype == 'distributor'">DIS_CHECK=0</if>
		</set> 	
		where RNO= #{rno}	
	</update>
	<update id="updateNotCheck" parameterType="map">
		update REQUESTS
		<set>
			<if test="mtype == 'user'">USR_CHECK=1</if>
			<if test="mtype == 'developer'">DEV_CHECK=1</if>
			<if test="mtype == 'tester'">TES_CHECK=1</if>
			<if test="mtype == 'usertester'">UTT_CHECK=1</if>
			<if test="mtype == 'distributor'">DIS_CHECK=1</if>
		</set> 	
		where RNO= #{rno}	
	</update>
	
	<select id="selectNewAlertList" parameterType="com.oti.srm.dto.Member" resultType="com.oti.srm.dto.Request">
		select 
			REQ_TITLE as "reqTitle",
			REQ_DATE as "reqDate",
			STATUS_NO as "statusNo",
			r.RNO as "rno"				
		from REQUESTS r 
		<if test="mtype != 'user'">
			<if test="mtype != 'pm'">
				, REQUEST_PROCESS p
			</if>
		</if>		  
		<where> 
			<if test="mtype == 'user'">
				USR_CHECK=1 and CLIENT=#{mid}
			</if>
			<if test="mtype == 'pm'">
				PM_CHECK=1
			</if>
			<if test="mtype == 'developer'">
				DEV_CHECK=1 and DEVELOPER=#{mid} and r.RNO = p.RNO
			</if>
			<if test="mtype == 'tester'">
				TES_CHECK=1 and TESTER=#{mid} and r.RNO = p.RNO
			</if>
			<if test="mtype == 'usertester'">
				UTT_CHECK=1 and USER_TESTER=#{mid} and r.RNO = p.RNO
			</if>
			<if test="mtype == 'distributor'">
				DIS_CHECK=1 and DISTRIBUTOR=#{mid} and r.RNO = p.RNO
			</if>
		</where>
		order by r.RNO desc	

	</select>
		
	
</mapper>